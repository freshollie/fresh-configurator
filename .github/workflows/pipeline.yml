name: pipeline

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"

      - name: Lint
        run: yarn lint:all

  constraints:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Check contraints
        run: yarn constraints

  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"

      - name: Format
        run: yarn fmt:check

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"

      - name: Test
        run: yarn test --coverage
        env:
          CI: true

      - name: Publish Coverage
        uses: codecov/codecov-action@v2

  schema-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"

      - name: Build docs
        run: yarn build:schema-docs
        env:
          CI: true

      - name: Publish
        if: github.ref == 'refs/heads/master'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=doc/schema --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SCHEMA_DOCS_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  api-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"

      - name: Build api docs
        run: yarn build:api-docs

      - name: Publish
        if: github.ref == 'refs/heads/master'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=doc/api --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_API_DOCS_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  storybook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"

      - name: Build
        run: yarn build:storybook

      - name: Test
        uses: mujo-code/puppeteer-headful@v2
        env:
          CI: true
        with:
          args: yarn workspace @betaflight/configurator storyshots:production

      - name: Publish test diff
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2-preview
        with:
          name: diff
          path: |
            packages/configurator/__image_snapshots__/__diff_output__/*

      - name: Preview
        id: storybook-preview
        if: github.ref != 'refs/heads/master'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/configurator/storybook-static
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STORYBOOK_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Preview storybook URL
        if: github.ref != 'refs/heads/master'
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            Storybook has been automatically deployed to Netlify.

            üîç Inspect: ${{ steps.storybook-preview.outputs.NETLIFY_LOGS_URL }}
            ‚úÖ Preview: ${{ steps.storybook-preview.outputs.NETLIFY_URL }}

      - name: Publish
        if: github.ref == 'refs/heads/master'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/configurator/storybook-static --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STORYBOOK_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  demo-api:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v1

      - name: Login to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: heroku container:login

      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: heroku container:push -a betaflight-mock-api web --recursive

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: heroku container:release -a betaflight-mock-api web

  configurator:
    runs-on: ${{ matrix.os }}
    env:
      DISPLAY: :0

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    needs: [test, lint, format]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"
        run: yarn --immutable

      - name: Build configurator
        run: yarn workspace @betaflight/configurator build

      - name: Output
        uses: actions/upload-artifact@v2
        if: "!startsWith(github.ref, 'refs/tags/@betaflight/configurator@')"
        with:
          path: |
            packages/configurator/dist/*.snap
            packages/configurator/dist/*.msi
            packages/configurator/dist/*.dmg

      - name: Setup xvfb (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
          # start xvfb in the background
          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &

      - name: E2E
        run: yarn e2e:production

      - name: Upload failure artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2-preview
        with:
          name: diff
          path: |
            packages/configurator/e2e/output/*.png
            packages/configurator/e2e/output/*.webm
            packages/configurator/e2e/output/trace/*.zip

      - name: Preview demo
        id: preview-demo
        if: github.ref != 'refs/heads/master' && matrix.os == 'ubuntu-latest'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/configurator/build/renderer
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEMO_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Preview demo URL
        if: github.ref != 'refs/heads/master' && matrix.os == 'ubuntu-latest'
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            The configurator has been automatically deployed to Netlify.

            üîç Inspect: ${{ steps.preview-demo.outputs.NETLIFY_LOGS_URL }}
            ‚úÖ Preview: ${{ steps.preview-demo.outputs.NETLIFY_URL }}?backend=wss://betaflight-api-pr-${{ github.event.number }}.herokuapp.com

      - name: Publish demo
        if: github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-latest'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/configurator/build --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEMO_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Release configurator
        if: startsWith(github.ref, 'refs/tags/@betaflight/configurator@')
        run: yarn workspace @betaflight/configurator release
        env:
          GH_TOKEN: ${{ secrets.github_token }}
