name: pipeline

on:
  push:
    branches:
      - master 
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
  
      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'

      - name: Lint
        run: yarn lint:all

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
  
      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'

      - name: Test
        run: yarn test --coverage
        env:
          CI: true

      - name: Publish Coverage
        uses: codecov/codecov-action@v1
    
  storybook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
  
      - name: Install
        run: yarn --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
        
      - name: Build
        run: yarn build:storybook
      
      - name: Test
        uses: ianwalter/puppeteer@12728ddef82390d1ecd4732fb543f62177392fbb
        env:
          CI: true
        with:
          args: yarn workspace @betaflight/configurator storyshots:production

      - name: Publish test diff
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2-preview
        with:
          name: diff
          path: |
            packages/configurator/__image_snapshots__/__diff_output__/*
      
      - name: Preview
        id: storybook-preview
        if: github.ref != 'refs/heads/master'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/configurator/storybook-static
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STORYBOOK_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Preview storybook URL
        if: github.ref != 'refs/heads/master'
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            Storybook has been automatically deployed to Netlify.
            
            üîç Inspect: ${{ steps.storybook-preview.outputs.NETLIFY_LOGS_URL }}
            ‚úÖ Preview: ${{ steps.storybook-preview.outputs.NETLIFY_URL }}
      
      - name: Publish
        if: github.ref == 'refs/heads/master'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/configurator/storybook-static --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STORYBOOK_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  demo-api:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v1

      - name: Login to Heroku
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: heroku container:login 

      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: 
          heroku container:push -a betaflight-mock-api web --recursive

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: heroku container:release -a betaflight-mock-api web
  
  configurator:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    needs: [test, lint, storybook]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
  
      - name: Install
        run: yarn --immutable

      - name: Build configurator
        run: yarn workspace @betaflight/configurator build
      
      - name: E2E
        uses: GabrielBB/xvfb-action@v1.2
        with:
          run: yarn e2e:production
      
      - name: Preview demo
        id: preview-demo
        if: github.ref != 'refs/heads/master' && matrix.os == 'ubuntu-latest'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/configurator/build
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEMO_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Preview demo URL
        if: github.ref != 'refs/heads/master' && matrix.os == 'ubuntu-latest'
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            The configurator has been automatically deployed to Netlify.
            
            üîç Inspect: ${{ steps.preview-demo.outputs.NETLIFY_LOGS_URL }}
            ‚úÖ Preview: ${{ steps.preview-demo.outputs.NETLIFY_URL }}?backend=wss://betaflight-api-pr-${{ github.event.number }}.herokuapp.com
      
      - name: Publish demo
        if: github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-latest'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/configurator/build --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEMO_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Release configurator
        if: startsWith(github.ref, 'refs/tags/@betaflight/configurator@')
        run: yarn workspace @betaflight/configurator release
        env:
          GH_TOKEN: ${{ secrets.github_token }}
          
      - name: Output Linux
        uses: actions/upload-artifact@v2-preview
        if: "!startsWith(github.ref, 'refs/tags/@betaflight/configurator@')"
        with:
          name: linux
          path: packages/configurator/dist/*.snap

      - name: Output Windows
        uses: actions/upload-artifact@v2-preview
        if: "!startsWith(github.ref, 'refs/tags/@betaflight/configurator@')"
        with:
          name: windows
          path: packages/configurator/dist/*.msi

      - name: Output MacOS
        uses: actions/upload-artifact@v2-preview
        if: "!startsWith(github.ref, 'refs/tags/@betaflight/configurator@')"
        with:
          name: macos
          path: |
            packages/configurator/dist/*.dmg
